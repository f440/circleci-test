# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

setup: true

orbs:
  file-changes:
    commands:
      halt-if-not-changed:
        parameters:
          pattern:
            type: string
            description: "Pattern to match the changed files."
          diff-filter:
            type: string
            default: "d"
            description: "Filter files by status. See: https://git-scm.com/docs/git-diff#Documentation/git-diff.txt---diff-filterACDMRT"
          base-branch:
            type: string
            description: "Halt the job if the specified files are not changed."
        steps:
          - checkout
          - run:
              name: "Check if files are changed"
              command: |
                echo "Fetching base branch..."
                BASE_BRANCH=$(git ls-remote --symref origin HEAD | grep -oP '(?<=refs/heads/)\S+')
                BASE_SHA1=$(git ls-remote --symref origin HEAD | tail -n 1 | cut -f 1)
                echo "Base SHA1: $BASE_SHA1"
                echo "Base BRANCH: $BASE_BRANCH"
                # echo "BASE BRANCH FROM PARAM: << parameters.base-branch >>"
                echo

                # Since the difference of files is calculated based on the default branch,
                # the difference cannot be obtained if the PR is created from the default branch.
                if [ $BASE_BRANCH = $CIRCLE_BRANCH ]; then
                  echo "Base branch is same as default branch. Regular job will be executed."
                  exit 0
                fi

                echo "Changed files:"
                git diff --name-only --diff-filter=<< parameters.diff-filter >> $BASE_SHA1...$CIRCLE_SHA1 | tee changed.txt
                echo
                if [ $? -ne 0 ]; then
                  echo "Failed to get changed files. Regular job will be executed."
                  exit 0
                fi

                echo "Matched files:"
                cat changed.txt | grep -P -e "<< parameters.pattern >>" | tee matched.txt || true
                echo
                if [ ! -s matched.txt ]; then
                  echo "not matched. skip."
                  circleci-agent step halt
                fi

commands:
  skip-if-npm-dev-dependencies-update:
    description: "Job halted (irrelevant update: npm devDependencies)"
    steps:
      - when:
          condition:
            matches:
              pattern: "^renovate/.*devDependencies-.*"
              value: << pipeline.git.branch >>
          steps:
            - run:
                name: "Job halted (irrelevant update: npm devDependencies)"
                command: circleci-agent step halt
  skip-if-npm-dependencies-update:
    description: "Job halted (irrelevant update: npm dependencies)"
    steps:
      - when:
          condition:
            matches:
              pattern: "^renovate/.*dependencies-.*"
              value: << pipeline.git.branch >>
          steps:
            - run:
                name: "Job halted (irrelevant update: npm dependencies)"
                command: circleci-agent step halt

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - file-changes/halt-if-not-changed:
          pattern: "src/.*"
          base-branch: << pipeline.git.base_revision >>
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
      # - path-filtering/filter:
      #     base-revision: main
      #     config-path: .circleci/config-x.yml
      #     mapping: |
      #       src/x/.* flag-x true
